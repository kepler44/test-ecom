{"version":3,"file":"static/js/465.5ad5cfbf.chunk.js","mappings":"uNA6EA,OAAeA,EAAAA,EAAAA,IAAQ,KAAvB,EAvEA,YAAqC,IAAbC,EAAY,EAAZA,SAEfC,EAAoCD,EAApCC,KAAMC,EAA8BF,EAA9BE,SAAUC,EAAoBH,EAApBG,MAAOC,EAAaJ,EAAbI,SACzBC,GAAWC,EAAAA,EAAAA,MAajB,OACC,qBAASC,UAAU,UAAnB,WACC,+BACC,gBACCA,UAAU,MACVC,MAAO,CAAEC,gBAAgB,QAAD,OAAUP,EAAV,MACxBQ,IAAKT,KAEN,gBAAKM,UAAU,SAASI,QApBX,WACfN,EAASO,EAAAA,GAAAA,WAA0BZ,KAmBjC,UACC,0CAIF,iBAAKO,UAAU,UAAf,WACC,wBAAKN,KACL,gBACCM,UAAU,SACVC,MAAO,CAAEC,gBAAgB,QAAD,OAAUP,EAAV,SAIzB,gBACCW,MAAM,oEACNL,MAAO,CAAEM,IAAK,KACdP,UAAU,qBAOZ,oBAAQA,UAAU,UAAlB,WACC,iBAAMA,UAAU,WAAWI,QApCZ,WACjBN,EAASO,EAAAA,GAAAA,cAA6BZ,KAmCpC,gBAGA,iBAAMO,UAAU,KAAhB,SAAsBH,KACtB,iBAAMG,UAAU,UAAUI,QA5CX,WACjBN,EAASO,EAAAA,GAAAA,cAA6BZ,KA2CpC,gBAIA,gBAAIO,UAAU,aAAd,cAA6BJ,MAE7B,eAAII,UAAU,QAAd,0B,uCCHJ,MAvD6B,SAAC,GAAe,IAAbJ,EAAY,EAAZA,MACzBY,EAAY,IAARZ,EAyBV,OAHea,OAAOC,UAAUC,QAI/B,SAAC,IAAD,CACCC,MAAM,UACNlB,KAAK,qBACLmB,+BAA6B,EAC7BC,MAAM,iCACNC,YAAW,wBAAmBnB,GAC9BoB,OAAQR,EACRS,WAAW,UACXC,MAhCc,SAACA,GAChBC,QAAQC,IAAIF,GACZG,GAAAA,CAAM,CACLC,IAAK,UACLC,OAAQ,OACRC,KAAM,CACLR,OAAQR,EACRU,MAAOA,KAGPO,MAAK,SAACC,GACNC,MAAM,yBAENC,OAAM,SAACC,GACPV,QAAQC,IAAI,uBAAyBU,KAAKC,MAAMF,IAChDF,MACC,+FAiBFK,UAXD,8GAYChC,UAAU,SAVX,UAYC,SAAC,IAAD,yBAGD,gBAAKA,UAAU,WAAf,UACC,SAAC,IAAD,mCCOGiC,GAAkBC,EAAAA,EAAAA,IAAyB,CAChDC,UAAWC,EAAAA,GACXC,MAAOC,EAAAA,KAGR,GAAe9C,EAAAA,EAAAA,IAAQyC,EAAvB,EAjDqB,SAAC,GAA0B,IAAxBE,EAAuB,EAAvBA,UAAWE,EAAY,EAAZA,MAClC,OACC,iBAAKrC,UAAU,gBAAf,WACC,gBAAKA,UAAU,kBAAf,UACC,gBAAKA,UAAU,GAAf,UACC,iDAIAmC,GAGD,UAAC,WAAD,WACEA,EAAUI,KAAI,SAAC9C,GAAD,OACd,SAAC,EAAD,CAAgCA,SAAUA,GAAvBA,EAAS+C,QAE7B,gBAAKxC,UAAU,QAAQC,MAAO,CAAEwC,aAAc,QAA9C,UACC,uCAAeJ,QAIhB,gBAAKpC,MAAO,CAAEyC,MAAO,QAArB,UACC,SAAC,EAAD,UAZF,gBAAK1C,UAAU,OAAf,gCAiBD,iBACCC,MAAO,CACN0C,MAAO,MACPC,SAAU,OACVC,OAAQ,SACRC,UAAW,SACXJ,MAAO,QANT,sEAUC,kBAVD","sources":["components/checkout-item/checkout-item.component.jsx","domain-features/payment/stripe-button/stripe-button.component.jsx","pages/checkout/checkout.page.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { actionsCreator } from \"../../store/reducers/cart.reducer\";\r\nimport \"./checkout-item.styles.scss\";\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\nimport { selectCartItems } from \"../../store/select/cart.selector\";\r\n\r\nfunction CheckoutItem({ cartItem }) {\r\n\t//useSelector(selectCartItems);\r\n\tconst { name, imageUrl, price, quantity } = cartItem;\r\n\tconst dispatch = useDispatch();\r\n\tconst _remove = () => {\r\n\t\tdispatch(actionsCreator.removeItem(cartItem));\r\n\t};\r\n\r\n\tconst _increase = () => {\r\n\t\tdispatch(actionsCreator.increaseItems(cartItem));\r\n\t};\r\n\r\n\tconst _decrease = () => {\r\n\t\tdispatch(actionsCreator.decreaseItems(cartItem));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<article className=\"product\">\r\n\t\t\t<header>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName=\"img\"\r\n\t\t\t\t\tstyle={{ backgroundImage: `url(\"${imageUrl}\"` }}\r\n\t\t\t\t\talt={name}\r\n\t\t\t\t/>\r\n\t\t\t\t<div className=\"remove\" onClick={_remove}>\r\n\t\t\t\t\t<h3>Remove </h3>\r\n\t\t\t\t</div>\r\n\t\t\t</header>\r\n\r\n\t\t\t<div className=\"content\">\r\n\t\t\t\t<h1>{name}</h1>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName=\"img-bg\"\r\n\t\t\t\t\tstyle={{ backgroundImage: `url(\"${imageUrl}\"` }}\r\n\t\t\t\t></div>\r\n\t\t\t\t{/*Lorem ipsum dolor sit amet, consectetur adipisicing elit. Soluta,\r\n\t\t\t\tnumquam quis perspiciatis ea ad omnis provident laborum dolore in atque.*/}\r\n\t\t\t\t<div\r\n\t\t\t\t\ttitle=\"You have selected this product to be shipped in the color yellow.\"\r\n\t\t\t\t\tstyle={{ top: \"0\" }}\r\n\t\t\t\t\tclassName=\"color yellow\"\r\n\t\t\t\t></div>\r\n\t\t\t\t{/*<div style={{ top: \"43px\" }} className=\"type small\">\r\n\t\t\t\t\tXXL\r\n\t\t\t\t</div>*/}\r\n\t\t\t</div>\r\n\r\n\t\t\t<footer className=\"content\">\r\n\t\t\t\t<span className=\"qt-minus\" onClick={_decrease}>\r\n\t\t\t\t\t-\r\n\t\t\t\t</span>\r\n\t\t\t\t<span className=\"qt\">{quantity}</span>\r\n\t\t\t\t<span className=\"qt-plus\" onClick={_increase}>\r\n\t\t\t\t\t+\r\n\t\t\t\t</span>\r\n\r\n\t\t\t\t<h2 className=\"full-price\">${price}</h2>\r\n\r\n\t\t\t\t<h2 className=\"price\">-5%</h2>\r\n\t\t\t</footer>\r\n\t\t</article>\r\n\t);\r\n}\r\n/* const mapStateToProps = createStructuredSelector({\r\n  cartItems: selectCartItems,\r\n}); */\r\n\r\n/* const mapDispatchToProps = (d) => ({\r\n  removeItem: (item) => d(removeItem(item)),\r\n}); */\r\n\r\nexport default connect(null)(CheckoutItem);\r\n\r\n/*\treturn (\r\n\t\t<div className=\"checkout-item\">\r\n\t\t\t<div className=\"image-container\">\r\n\t\t\t\t<img src={imageUrl} alt=\"item\" />\r\n\t\t\t</div>\r\n\t\t\t<span className=\"name\">{name}</span>\r\n\t\t\t<span className=\"quantity\">\r\n\t\t\t\t<span\r\n\t\t\t\t\tclassName=\"arrow\"\r\n\t\t\t\t\tonClick={() => dispatch(actionsCreator.decreaseItems(cartItem))}\r\n\t\t\t\t>\r\n\t\t\t\t\t&#10096;\r\n\t\t\t\t</span>\r\n\t\t\t\t{quantity}\r\n\t\t\t\t<span\r\n\t\t\t\t\tclassName=\"arrow\"\r\n\t\t\t\t\tonClick={() => dispatch(actionsCreator.increaseItems(cartItem))}\r\n\t\t\t\t>\r\n\t\t\t\t\t&#10095;\r\n\t\t\t\t</span>\r\n\t\t\t</span>\r\n\t\t\t<span className=\"price\">{price}</span>\r\n\t\t\t<span\r\n\t\t\t\tclassName=\"remove-button\"\r\n\t\t\t\tonClick={() => dispatch(actionsCreator.removeItem(cartItem))}\r\n\t\t\t>\r\n\t\t\t\t<span style={{ fontSize: \"20px\" }}>&#9932;</span>\r\n\t\t\t</span>\r\n\t\t</div>\r\n\t);*/\r\n","import React from \"react\";\r\nimport StripeCheckout from \"react-stripe-checkout\";\r\nimport axios from \"axios\";\r\nimport \"./styles.scss\";\r\nimport CustomButton from \"../../../components/ui-button/ui-button.component\";\r\n\r\nconst StripeCheckoutButton = ({ price }) => {\r\n\tconst p = price * 100;\r\n\r\n\tconst onToken = (token) => {\r\n\t\tconsole.log(token);\r\n\t\taxios({\r\n\t\t\turl: \"payment\",\r\n\t\t\tmethod: \"post\",\r\n\t\t\tdata: {\r\n\t\t\t\tamount: p,\r\n\t\t\t\ttoken: token,\r\n\t\t\t},\r\n\t\t})\r\n\t\t\t.then((res) => {\r\n\t\t\t\talert(\"Payment successful\");\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(\"Some payment error: \" + JSON.parse(err));\r\n\t\t\t\talert(\r\n\t\t\t\t\t\"There was an issue with your payment. Please sure you use the provided test credit cart\"\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t};\r\n\tconst online = window.navigator.onLine;\r\n\tconst pk =\r\n\t\t\"pk_test_51KRyXWHKML16SJQc8pO62wzQBHCtjY7T5ROBqNUgAUmiSEI99ih0JnZ005hh28kEF2tR3D63gCWVR5vkT5pAzvH400LVT1tXte\";\r\n\treturn online ? (\r\n\t\t<StripeCheckout\r\n\t\t\tlabel=\"Pay Now\"\r\n\t\t\tname=\"CRWN Clothing Ltd.\"\r\n\t\t\tbillingAddressshippingAddress\r\n\t\t\timage=\"https://svgshare.com/i/CUz.svg\"\r\n\t\t\tdescription={`You total is $${price}`}\r\n\t\t\tamount={p}\r\n\t\t\tpanelLabel=\"Pay Now\"\r\n\t\t\ttoken={onToken}\r\n\t\t\tstripeKey={pk}\r\n\t\t\tclassName=\"asdasd\"\r\n\t\t>\r\n\t\t\t<CustomButton>PAY NOW</CustomButton>\r\n\t\t</StripeCheckout>\r\n\t) : (\r\n\t\t<div className=\"disabled\">\r\n\t\t\t<CustomButton>PAY NOW (offline)</CustomButton>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nfunction qweqwe() {\r\n\treturn <div className=\"asdasd\"></div>;\r\n}\r\n\r\n/* const StripeCheckoutButton = ({ price }) => {\r\n  return <InjectedCheckoutForm />;\r\n}; */\r\nexport default StripeCheckoutButton;\r\n","import React from \"react\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport {\r\n\tselectCartItems,\r\n\tselectCartTotal,\r\n} from \"../../store/select/cart.selector\";\r\nimport { connect, useDispatch } from \"react-redux\";\r\n\r\nimport \"./styles.scss\";\r\nimport CheckoutItem from \"../../components/checkout-item/checkout-item.component\";\r\nimport StripeCheckoutButton from \"../../domain-features/payment/stripe-button/stripe-button.component\";\r\n\r\nconst CheckOutPage = ({ cartItems, total }) => {\r\n\treturn (\r\n\t\t<div className=\"checkout-page\">\r\n\t\t\t<div className=\"checkout-header\">\r\n\t\t\t\t<div className=\"\">\r\n\t\t\t\t\t<span>Your Products:</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t{!cartItems ? (\r\n\t\t\t\t<div className=\"mt-5\">You cart is empty</div>\r\n\t\t\t) : (\r\n\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t{cartItems.map((cartItem) => (\r\n\t\t\t\t\t\t<CheckoutItem key={cartItem.id} cartItem={cartItem} />\r\n\t\t\t\t\t))}\r\n\t\t\t\t\t<div className=\"total\" style={{ marginBottom: \"20px\" }}>\r\n\t\t\t\t\t\t<span>TOTAL: ${total}</span>\r\n\t\t\t\t\t\t{/*<span style={{ fontSize: \"0.7em\" }}>Total:</span>{\" \"}\r\n\t\t\t  <span className=\"price  \">${total}</span>*/}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div style={{ width: \"100%\" }}>\r\n\t\t\t\t\t\t<StripeCheckoutButton />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</React.Fragment>\r\n\t\t\t)}\r\n\r\n\t\t\t<div\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tcolor: \"red\",\r\n\t\t\t\t\tfontSize: \"22px\",\r\n\t\t\t\t\tmargin: \"auto 0\",\r\n\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\twidth: \"200%\",\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t*Please use the following test credit card for payments*\r\n\t\t\t\t<br />\r\n\t\t\t\t4242 4242 4242 4242 - Exp: 01/24 - CW: 123\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n\tcartItems: selectCartItems,\r\n\ttotal: selectCartTotal,\r\n});\r\n\r\nexport default connect(mapStateToProps)(CheckOutPage);\r\n\r\n/*<div className=\"header-block\">\r\n\t\t\t\t\t<span>Product</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"header-block\">\r\n\t\t\t\t\t<span>Description</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"header-block\">\r\n\t\t\t\t\t<span>Quantity</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"header-block\">\r\n\t\t\t\t\t<span>Price</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"header-block\">\r\n\t\t\t\t\t<span>Remove</span>\r\n\t\t\t\t</div>*/\r\n"],"names":["connect","cartItem","name","imageUrl","price","quantity","dispatch","useDispatch","className","style","backgroundImage","alt","onClick","actionsCreator","title","top","p","window","navigator","onLine","label","billingAddressshippingAddress","image","description","amount","panelLabel","token","console","log","axios","url","method","data","then","res","alert","catch","err","JSON","parse","stripeKey","mapStateToProps","createStructuredSelector","cartItems","selectCartItems","total","selectCartTotal","map","id","marginBottom","width","color","fontSize","margin","textAlign"],"sourceRoot":""}