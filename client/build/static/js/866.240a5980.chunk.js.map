{"version":3,"file":"static/js/866.240a5980.chunk.js","mappings":"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","sources":["components/ui-form-input/ui-form-input.component.jsx","components/sign-in-form/sign-in.component.jsx","components/sign-up-form/sign-up.component.jsx","pages/sign-in-and-sign-up/sign-in-and-sign-up.page.jsx"],"sourcesContent":["import React from \"react\";\r\nimport \"./styles.scss\";\r\nexport default function FormInput({ handleChange, label, ...rest }) {\r\n\treturn (\r\n\t\t<div className=\"group\">\r\n\t\t\t<input className=\"form-input\" onChange={handleChange} {...rest}></input>\r\n\t\t\t{label ? (\r\n\t\t\t\t<label\r\n\t\t\t\t\tclassName={`${\r\n\t\t\t\t\t\trest.value.length > 0 ? \"shrink\" : \"\"\r\n\t\t\t\t\t} form-input-label`}\r\n\t\t\t\t>\r\n\t\t\t\t\t{label}\r\n\t\t\t\t</label>\r\n\t\t\t) : null}\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React, { Component, useState } from \"react\";\r\nimport FormInput from \"../ui-form-input/ui-form-input.component\";\r\nimport CustomButton from \"../ui-button/ui-button.component\";\r\nimport \"./sign-in.styles.scss\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { actionsCreator } from \"../../store/reducers/user.reducer\";\r\n\r\nconst SignIn = () => {\r\n\tconst [userCredentials, setCredentials] = useState({\r\n\t\temail: \"\",\r\n\t\tpassword: \"\",\r\n\t});\r\n\tconst { email, password } = userCredentials;\r\n\tconst dispatch = useDispatch();\r\n\tconst handleSubmit = async (e) => {\r\n\t\te.preventDefault();\r\n\t\tdispatch(actionsCreator.emailSignInStart({ email, password }));\r\n\t};\r\n\tconst handleChange = (e) => {\r\n\t\tconst { name, value } = e.target;\r\n\t\tsetCredentials({ ...userCredentials, [name]: value });\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"sign-in \" onSubmit={handleSubmit}>\r\n\t\t\t<h2>I have an account</h2>\r\n\r\n\t\t\t<span>Sign in with your google account</span>\r\n\t\t\t<form>\r\n\t\t\t\t<CustomButton\r\n\t\t\t\t\tonClick={() => dispatch(actionsCreator.googleSignInStart())}\r\n\t\t\t\t\tcss=\"blue\"\r\n\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t>\r\n\t\t\t\t\tSign In With Goggle\r\n\t\t\t\t</CustomButton>\r\n\t\t\t</form>\r\n\t\t\t<br />\r\n\t\t\t<span>Sign in with your email and password</span>\r\n\r\n\t\t\t<form>\r\n\t\t\t\t<FormInput\r\n\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\tlabel=\"Email\"\r\n\t\t\t\t\tvalue={userCredentials.email}\r\n\t\t\t\t\thandleChange={handleChange}\r\n\t\t\t\t/>\r\n\t\t\t\t<FormInput\r\n\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\tlabel=\"Password\"\r\n\t\t\t\t\tvalue={userCredentials.password}\r\n\t\t\t\t\thandleChange={handleChange}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<CustomButton type=\"submit\">Sign In</CustomButton>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SignIn;\r\n\r\n//import { signInWithGoogle } from \"./../../firebase/firebase.utils\";\r\n//import UserActionTypes from \"../../store/select/user.types\";\r\n//import { emailSignInStart } from \"../../store/select/user.actions\";\r\n\r\n/* function withRouter(Component) {\r\n\tfunction ComponentWithRouterProp(props) {\r\n\t\tlet navigate = useNavigate();\r\n\t\t//let params = useParams();\r\n\t\treturn <Component {...props} router={{ navigate }} />;\r\n\t}\r\n\treturn ComponentWithRouterProp;\r\n}\r\n\r\nconst mapStateToProps = (state) => ({});\r\n\r\nexport default withRouter(connect(mapStateToProps, null)(SignIn));\r\n */\r\n/*  this.props.dispatch({\r\n      type: UserActionTypes.GOOGLE_SIGN_IN_START,\r\n      payl\r\n    }) */\r\n/*  try {\r\n      const auth = getAuth();\r\n      await signInWithEmailAndPassword(auth, email, password);\r\n      this.setState({ email: \"\", password: \"\" });\r\n      this.navigate(this.props.from, { replace: true });\r\n\r\n      // window.location.replace(location.state.from.pathname);\r\n    } catch (err) {\r\n      console.log(err);\r\n    } */\r\n\r\n/*\r\n\r\nclass SignIn2 extends Component {\r\n  state = {};\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      name: \"\",\r\n      password: \"\",\r\n    };\r\n  }\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    // console.log(this.props);./\r\n\r\n    const { email, password } = this.state;\r\n\r\n    this.props.dispatch(emailSignInStart({ email, password }));\r\n  \r\n  };\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"sign-in\" onSubmit={this.handleSubmit}>\r\n        <h2>I have an account</h2>\r\n        <span>Sign in with your email and password</span>\r\n\r\n        <form>\r\n          <FormInput\r\n            name=\"email\"\r\n            type=\"email\"\r\n            label=\"Email\"\r\n            value={this.state.email}\r\n            handleChange={this.handleChange}\r\n          />\r\n          <FormInput\r\n            name=\"password\"\r\n            type=\"password\"\r\n            label=\"Password\"\r\n            value={this.state.password}\r\n            handleChange={this.handleChange}\r\n          />\r\n\r\n          <div>\r\n            <CustomButton type=\"submit\">Sign In</CustomButton>\r\n            <CustomButton\r\n              onClick={() =>\r\n                this.props.dispatch({\r\n                  type: UserActionTypes.GOOGLE_SIGN_IN_START,\r\n                })\r\n              }\r\n              css=\"blue\"\r\n              type=\"button\"\r\n            >\r\n              Sign In With Goggle\r\n            </CustomButton>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n*/\r\n","import React, { Component } from \"react\";\r\nimport { actionsCreator } from \"../../store/reducers/user.reducer\";\r\nimport CustomButton from \"../ui-button/ui-button.component\";\r\nimport FormInput from \"../ui-form-input/ui-form-input.component\";\r\nimport \"./sign-up.styles.scss\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass SignUp extends Component {\r\n\tstate = {\r\n\t\tdisplayName: \"\",\r\n\t\temail: \"\",\r\n\t\tpassword: \"\",\r\n\t\tconfirmPassword: \"\",\r\n\t};\r\n\r\n\thandleSubmit = async (e) => {\r\n\t\te.preventDefault();\r\n\t\tconst { displayName, email, password, confirmPassword } = this.state;\r\n\t\tif (password !== confirmPassword) {\r\n\t\t\t//  error\r\n\t\t\treturn;\r\n\t\t}\r\n\t\ttry {\r\n\t\t\tthis.props.dispatch(\r\n\t\t\t\tactionsCreator.signUpStart(email, password, displayName)\r\n\t\t\t);\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err.message);\r\n\t\t}\r\n\t};\r\n\thandleChange = (e) => {\r\n\t\tconst { name, value } = e.target;\r\n\t\tthis.setState({ [name]: value });\r\n\t\t/*  const { displayName, email, password, confirmPassword } = this.state;\r\n    this.setState({ displayName, email, password, confirmPassword }); */\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { displayName, email, password, confirmPassword } = this.state;\r\n\t\treturn (\r\n\t\t\t<div className=\"sign-up \">\r\n\t\t\t\t<h2>I do not have an account</h2>\r\n\t\t\t\t<span>Sign up with your email and password</span>\r\n\t\t\t\t<form className=\"sign-up-form\" onSubmit={this.handleSubmit}>\r\n\t\t\t\t\t<FormInput\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tname=\"displayName\"\r\n\t\t\t\t\t\tvalue={displayName}\r\n\t\t\t\t\t\thandleChange={this.handleChange}\r\n\t\t\t\t\t\tlabel=\"Display Name\"\r\n\t\t\t\t\t\trequred=\"true\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<FormInput\r\n\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\thandleChange={this.handleChange}\r\n\t\t\t\t\t\tlabel=\"Email\"\r\n\t\t\t\t\t\trequred=\"true\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<FormInput\r\n\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\thandleChange={this.handleChange}\r\n\t\t\t\t\t\tlabel=\"Password\"\r\n\t\t\t\t\t\trequred=\"true\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<FormInput\r\n\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\tname=\"confirmPassword\"\r\n\t\t\t\t\t\tvalue={confirmPassword}\r\n\t\t\t\t\t\thandleChange={this.handleChange}\r\n\t\t\t\t\t\tlabel=\"Confirm Password\"\r\n\t\t\t\t\t\trequred=\"true\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<CustomButton type=\"submit\">Sign Up</CustomButton>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => ({});\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(null)(SignUp);\r\n","import React from \"react\";\r\nimport SignIn from \"../../components/sign-in-form/sign-in.component\";\r\nimport SignUp from \"../../components/sign-up-form/sign-up.component\";\r\nimport \"./styles.scss\";\r\nimport { Navigate, useLocation, useNavigate } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n\tselectCheckingUserData,\r\n\tselectCurrentUser,\r\n} from \"../../store/select/user.selector\";\r\nimport SpinnerContainer from \"../../components/spinner/with-spinner-no-redux.components\";\r\n\r\nexport default function SignInAndSignUpPage({ ...rest }) {\r\n\tconst checkingUserData = useSelector(selectCheckingUserData);\r\n\tconst currentUser = useSelector(selectCurrentUser);\r\n\tconst location = useLocation();\r\n\tconst navigate = useNavigate();\r\n\tif (checkingUserData) {\r\n\t\treturn <SpinnerContainer> Checking User Data... </SpinnerContainer>;\r\n\t}\r\n\t/* \tconsole.log(location);\r\n\tif (currentUser) {\r\n\t\t\r\n\t\treturn <Navigate to=\"/\" replace=\"true\"></Navigate>;\r\n\t} */\r\n\treturn (\r\n\t\t<div className=\"sign-in-and-sign-up\">\r\n\t\t\t<SignIn {...rest} />\r\n\t\t\t<SignUp {...rest} />\r\n\t\t</div>\r\n\t);\r\n}\r\n"],"names":["FormInput","handleChange","label","rest","className","onChange","value","length","useState","email","password","userCredentials","setCredentials","dispatch","useDispatch","handleSubmit","e","preventDefault","actionsCreator","target","name","onSubmit","onClick","css","type","SignUp","state","displayName","confirmPassword","props","err","console","log","message","setState","this","requred","Component","connect","SignInAndSignUpPage","checkingUserData","useSelector","selectCheckingUserData","selectCurrentUser","useLocation","useNavigate"],"sourceRoot":""}